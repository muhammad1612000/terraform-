provider "aws" {
    region = "us-east-1"
    access_key="AKIA32KEJN5D23S6XEBJ"
    secret_key="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"
}
resource "aws_vpc""main_vpc" {

 cidr_block = "10.0.0.0/16"
 tags = {

   Name = "task-1-vpc"
 }

}
resource "aws_internet_gateway" "main_gw" {
  vpc_id =aws_vpc.main_vpc.id

  tags = {
    Name = "task_1-igw"
  }
}
resource "aws_subnet" "sprints_subnet" {
vpc_id = aws_vpc.main_vpc.id

cidr_block ="10.0.0.0/24"
availability_zone = "us-east-1a"
tags ={
Name = "Sprints_Subnet"
}
}
resource "aws_route_table" "sprints_route_table" {
vpc_id = aws_vpc.main_vpc.id
}

resource "aws_route" "sprints_route"{

route_table_id = aws_route_table.sprints_route_table. id
destination_cidr_block = "0.0.0.0/0"
gateway_id = aws_internet_gateway.main_gw.id
}

resource "aws_route_table_association" "sprints_subnet_association" {
subnet_id = aws_subnet.sprints_subnet.id
route_table_id = aws_route_table.sprints_route_table.id
}

data "aws_ami" "ubuntu" {
  most_recent = true

  filter {
    name   = "name"
    values = ["ubuntu/images/hvm-ssd/ubuntu-focal-20.04-amd64-server-*"]
  }

  filter {
    name   = "virtualization-type"
    values = ["hvm"]
  }

  owners = ["099720109477"] # Canonical
}
resource "aws_security_group" "sprints_security_group"{
vpc_id = aws_vpc.main_vpc.id

ingress{
from_port = 80
to_port = 80
protocol = "tcp"
cidr_blocks = ["0.0.0.0/0"]

}

ingress{
from_port = 443
to_port = 443
protocol = "tcp"
cidr_blocks =["0.0.0.0/0"]
}

ingress{
from_port = 22
to_port = 22
protocol = "tcp"
cidr_blocks = ["0.0.0.0/0"]
}
egress{
from_port =0
to_port =0
protocol = "-1"
cidr_blocks = ["0.0.0.0/0"]
}
}
resource "aws_instance""sprints_ec2_instance"{
ami = data.aws_ami.ubuntu.id
instance_type = "t2.micro"
associate_public_ip_address = true
subnet_id = aws_subnet.sprints_subnet.id
security_groups = [aws_security_group.sprints_security_group.id]
availability_zone ="us-east-1a"

user_data = "${file("script.sh")}"
tags ={
Name = "MyEc2_ Sprints"
}
}
